#Question 3 (5 points)
#Create a Ridge regression model to predict alcohol content (as in Question 1).

#What to submit
#Submit your Python code as part of your report or if you have separate Python
#code (.py files), write in your report what they are called and where to find 
#them on GitHub.

#Write a brief description of your steps to create your model, including but 
#not limited to the following:
    
#Answer: Ridge regression being a regularised technique for linear regressio
    
#What is the accuracy of your model on the training and test data?

#Answer: 



#How did you tune the hyperparameter of your model?
#Compare this model with the linear regression model in Question 1, did you
#achieve improvement in your result? Whatâ€™s the difference between the two
#models?



import numpy as np
import os
import pandas as pd
import matplotlib as mpl
from numpy import mean
from numpy import std
from numpy import absolute
from pandas import read_csv
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import RepeatedKFold
from sklearn.linear_model import Ridge
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_squared_error

from pandas import read_csv
from matplotlib import pyplot

dataQ3 = pd.read_csv('./winequality-red.csv')
print(dataQ3.head())

dataQ3.columns=dataQ3.feature_names
dataQ3[#"?"].dataQ3.target
dataQ3.head()
X = dataQ3[:,:11]
y = dataQ3[:,11:12]
print(X)
print(y)   


ridge = Ridge(normalize = True)
coefs = #[]

for a in alphas:
    ridge.set_params(alpha = 1)
    ridge.fit(X, y)
    coefs.append(ridge.coef_)
    

#plt.xlabel('')
#plt.ylabel('')

# Split data into training and test sets
X_train, X_test , y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=30)


ridge = Ridge(alpha = 1, normalize = True)
ridgeTrain.fit(X_train, y_train)
predTest = ridge.predict(X_test)           
print(pd.Series(ridgeTrain.coef_, index = X.columns)) 
print(mean_squared_error(y_test, predTrain)) 
